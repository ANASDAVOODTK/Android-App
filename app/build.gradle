apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.anasdavood.appforcusat"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "ClientAccessToken", "111859572635723459262"
            resValue 'string', "ClientAccessToken", "111859572635723459262"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //buildConfigField 'String', "ClientAccessToken", "103837054001816369964L"
            resValue 'string', "ClientAccessToken", "111859572635723459262"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // Java V2
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.getRuntimeConfiguration().exclude group: 'com.google.code.findbugs', module: 'jsr305'
        variant.getRuntimeConfiguration().exclude group: 'com.google.code.findbugs', module: 'annotations'}
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // Dialogflow SDK dependencies for older V1 --- recommend not to use this
    //
    implementation 'ai.api:sdk:2.0.7@aar'
    implementation 'ai.api:libai:1.6.12'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.gpfreetech:IndiUpi:1.1'
    // Java V2
    implementation 'com.google.cloud:google-cloud-dialogflow:2.0.0'
    // for Remote Procedure Call to avoid "No functional channel service provider found" error while creating SessionsClient
    implementation 'io.grpc:grpc-okhttp:1.29.0'
    implementation 'com.github.baoyachi:StepView:1.9'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.ibm.watson:assistant:8.1.0'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.ibm.watson:text-to-speech:8.1.0'
    implementation 'com.ibm.watson:speech-to-text:8.1.0'
    implementation 'com.ibm.watson.developer_cloud:android-sdk:0.5.0'
    implementation 'com.google.android.gms:play-services:10.0.1'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation ('com.github.bumptech.glide:glide:4.9.0') {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

}